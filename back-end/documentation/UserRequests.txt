1. POST http://localhost:5000/user/register
    Registers a user
    Needs a json body.
    Example:
    {
        "firstName" : "name",
        "lastName": "lastname",
        "email": "abv@avb.bg",
        "password": "123123"
    }
    Returns ResponseEntity with message

2. PUT http://localhost:5000/user/login
    Logs a person in the platform
    Needs a json body.
    Example:
    {
        "email": "abv@avb.bg",
        "password": "123123"
    }
    Returns ResponseEntity with message(if not successful) or user body.
    Example:
    {
        "id": "3976a13a-4274-43f9-b219-8bfd098616b1",
        "firstName": "name",
        "lastName": "lastname",
        "sessionToken": "LTGFTiGyG632n9bNlVaxZWpBvxisusI6",
        "email": "abv@avb.bg",
        "password": "$2a$10$yMjS8PUuvFEGDKKCjb4Ag.e9gdgozL4i58ZfBUcWVC.BdnWLA0yUa",
        "isAdmin": false
    }
3. PUT http://localhost:5000/user/logout
    Logs a person out from the platform
    Requires a session-token header.

    Returns ResponseEntity with message
    Example:
    {"success":"Logout successful."}

4. GET http://localhost:5000/user/{uuid}
    Gets a user by uuid;
    Needs a path variable uuid.
    Example:
        http://localhost:5000/user/3976a13a-4274-43f9-b219-8bfd098616b1

    Returns ResponseEntity with message(if not successful) or user body.
    Example:
    {
        "id": "3976a13a-4274-43f9-b219-8bfd098616b1",
        "firstName": "name",
        "lastName": "lastname",
        "sessionToken": null,
        "email": "abv@avb.bg",
        "password": "$2a$10$yMjS8PUuvFEGDKKCjb4Ag.e9gdgozL4i58ZfBUcWVC.BdnWLA0yUa",
        "isAdmin": false
    }

5. GET http://localhost:5000/user/get
    Gets a user by sessionToken.
    Needs a session-token header.

    Returns ResponseEntity with message(if not successful) or user body.
    Example:
    {
        "id": "3976a13a-4274-43f9-b219-8bfd098616b1",
        "firstName": "name",
        "lastName": "lastname",
        "sessionToken": "nF6uZcAbmaDQw4QhIZ7bNsf_s--LFLCM",
        "email": "abv@avb.bg",
        "password": "$2a$10$yMjS8PUuvFEGDKKCjb4Ag.e9gdgozL4i58ZfBUcWVC.BdnWLA0yUa",
        "isAdmin": false
    }
6. POST http://localhost:5000/user/register/admin
    Registers a new user with admin privileges.
    Needs a user body.
    Example:
    {
        "firstName" : "name",
        "lastName": "lastname",
        "email" : "abvv@ab.bg",
        "password": "123123"
    }
    Requires a session-token header.


    Returns ResponseEntity with message

7. POST http://localhost:5000/user/register/moderator/{organizationUuid}
    Registers a new user with moderator privileges for the given organization.
    Needs a user body.
    Example:
        {
            "firstName" : "name",
            "lastName": "lastname",
            "email" : "abvv@ab.bg",
            "password": "123123"
        }
    Requires a session-token header.
    Needs organizationUuid path variable (the registering user has to be a moderator for the given organization)
    Example:
    http://localhost:5000/user/register/moderator/cn3_ZMq4XCyJL0h5yoDvkfd4e-ChtvdK/orgid123

    Returns ResponseEntity with message

8. DELETE http://localhost:5000/user/delete/{uuid}
    Needs a uuid as path variable.
    Requires a session-token header.
    Only admins(the sessionToken user) can delete users.
    The user with the corresponding uuid will be deleted if the sessionToken user is an admin.
    Returns ResponseEntity with message